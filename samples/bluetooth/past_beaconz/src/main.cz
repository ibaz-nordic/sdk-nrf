/*
 * Copyright (c) 2022 Nordic Semiconductor ASA
 *
 * SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
 */

#include <zephyr/bluetooth/bluetooth.h>
#include <zephyr/sys/__assert.h>

static struct bt_le_ext_adv *adv_set;

const static struct bt_le_adv_param param =
                BT_LE_ADV_PARAM_INIT(BT_LE_ADV_OPT_EXT_ADV |
                                     BT_LE_ADV_OPT_USE_NAME,
                                     BT_GAP_ADV_FAST_INT_MIN_2,
                                     BT_GAP_ADV_FAST_INT_MAX_2,
                                     NULL);


uint32_t sent_time = 0;
static void adv_sent(struct bt_le_ext_adv *instance,
                     struct bt_le_ext_adv_sent_info *info)
{

        __ASSERT(false, "Complete adv...\n");
        printk("Complete adv...\n");
}

static const struct bt_le_ext_adv_cb adv_cb = {
        .sent = adv_sent,
};

void main(void)
{
        int err;

        printk("Starting PAST Beacon Demo\n");

        /* Initialize the Bluetooth Subsystem */
        printk("Bluetooth initialization...");
        err = bt_enable(NULL);
        if (err) {
                printk("failed (err %d)\n", err);
                return;
        }
        printk("success\n");

        printk("Advertising set create...");
        err = bt_le_ext_adv_create(&param, &adv_cb, &adv_set);
        if (err) {
                printk("failed (err %d)\n", err);
                return;
        }
        printk("success\n");

        printk("Extended advertising enable...");
        err = bt_le_ext_adv_start(adv_set, BT_LE_EXT_ADV_START_DEFAULT);
        if (err) {
                printk("failed (err %d)\n", err);
                return;
        }
        printk("success\n");

        printk("Started extended advertising ...");
}

